{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../user.service\";\nconst _c0 = function () {\n  return [\"register\"];\n};\nexport class LoginComponent {\n  constructor(fb, router, userService) {\n    this.fb = fb;\n    this.router = router;\n    this.userService = userService;\n    this.initialState = new BehaviorSubject({});\n    this.formValuesChanged = new EventEmitter();\n    this.formSubmitted = new EventEmitter();\n    this.loginForm = new FormGroup({});\n  }\n  get username() {\n    return this.loginForm.get('username');\n  }\n  get password() {\n    return this.loginForm.get('password');\n  }\n  ngOnInit() {\n    this.initialState.subscribe(user => {\n      this.loginForm = this.fb.group({\n        username: [user.username, [Validators.required]],\n        password: [user.password, [Validators.required]]\n      });\n    });\n    this.loginForm.valueChanges.subscribe(val => {\n      this.formValuesChanged.emit(val);\n    });\n  }\n  submitForm() {\n    console.log(this.loginForm.value);\n    //this.formSubmitted.emit(this.employeeForm.value);\n    this.userLogin(this.loginForm.value);\n  }\n  userLogin(user) {\n    this.userService.login(user).subscribe({\n      next: () => {\n        this.router.navigate(['/home/new']);\n      },\n      error: error => {\n        alert(\"Failed to Login\");\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  inputs: {\n    initialState: \"initialState\"\n  },\n  outputs: {\n    formValuesChanged: \"formValuesChanged\",\n    formSubmitted: \"formSubmitted\"\n  },\n  decls: 29,\n  vars: 3,\n  consts: [[1, \"pt-5\"], [1, \"container\", \"login-bg\"], [1, \"row\"], [1, \"col-md-5\", \"mx-auto\"], [1, \"card\", \"card-body\"], [\"id\", \"submitForm\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"required\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"required\", \"\", \"formControlName\", \"username\", \"name\", \"username\", \"value\", \"\", 1, \"form-control\", \"text-lowercase\"], [\"for\", \"password\", 1, \"d-flex\", \"flex-row\", \"align-items-center\"], [\"href\", \"/forget-password\", 1, \"ml-auto\", \"border-link\", \"small-xl\"], [\"type\", \"password\", \"required\", \"\", \"formControlName\", \"password\", \"id\", \"password\", \"name\", \"password\", \"value\", \"\", 1, \"form-control\"], [1, \"form-group\", \"mt-4\", \"mb-4\"], [1, \"custom-control\", \"custom-checkbox\"], [\"type\", \"checkbox\", \"id\", \"remember-me\", \"name\", \"remember-me\", \"data-parsley-multiple\", \"remember-me\", 1, \"custom-control-input\"], [\"for\", \"remember-me\", 1, \"custom-control-label\"], [1, \"form-group\", \"pt-1\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\"], [1, \"small-xl\", \"pt-3\", \"text-center\"], [1, \"text-muted\"], [3, \"routerLink\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(6, \"div\", 6)(7, \"label\", 7);\n      i0.ɵɵtext(8, \"Username / Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 6)(11, \"label\", 9);\n      i0.ɵɵtext(12, \"Password \");\n      i0.ɵɵelementStart(13, \"a\", 10);\n      i0.ɵɵtext(14, \"Forget?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(15, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 12)(17, \"div\", 13);\n      i0.ɵɵelement(18, \"input\", 14);\n      i0.ɵɵelementStart(19, \"label\", 15);\n      i0.ɵɵtext(20, \"Remember me?\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"div\", 16)(22, \"button\", 17);\n      i0.ɵɵtext(23, \"Log In\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"p\", 18)(25, \"span\", 19);\n      i0.ɵɵtext(26, \"Not a member?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"a\", 20);\n      i0.ɵɵtext(28, \"Sign up\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(22);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n    }\n  },\n  dependencies: [i2.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"body[_ngcontent-%COMP%]{\\r\\n    background: #E8D426 !important;\\r\\n    font-family: 'Muli', sans-serif;\\r\\n    \\r\\n  }\\r\\n\\r\\n  h1[_ngcontent-%COMP%]{\\r\\n    color: #fff;\\r\\n    padding-bottom: 2rem;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  a[_ngcontent-%COMP%]{\\r\\n    color: #333;\\r\\n  }\\r\\n  a[_ngcontent-%COMP%]:hover{\\r\\n    color: #25d1c9;\\r\\n    text-decoration: none;\\r\\n  }\\r\\n  .form-control[_ngcontent-%COMP%]:focus{\\r\\n  \\r\\n      color: #000;\\r\\n      background-color: #fff;\\r\\n      border:2px solid #E8D426;\\r\\n      outline: 0;\\r\\n      box-shadow: none;\\r\\n  \\r\\n  }\\r\\n  \\r\\n  .btn[_ngcontent-%COMP%]{\\r\\n    background: #E8D426;\\r\\n    border: #E8D426;\\r\\n    \\r\\n  }\\r\\n  .btn[_ngcontent-%COMP%]:hover {\\r\\n    background: #E8D426;\\r\\n    border: #E8D426;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDhCQUE4QjtJQUM5QiwrQkFBK0I7O0VBRWpDOztFQUVBO0lBQ0UsV0FBVztJQUNYLG9CQUFvQjtJQUNwQixpQkFBaUI7RUFDbkI7RUFDQTtJQUNFLFdBQVc7RUFDYjtFQUNBO0lBQ0UsY0FBYztJQUNkLHFCQUFxQjtFQUN2QjtFQUNBOztNQUVJLFdBQVc7TUFDWCxzQkFBc0I7TUFDdEIsd0JBQXdCO01BQ3hCLFVBQVU7TUFDVixnQkFBZ0I7O0VBRXBCOztFQUVBO0lBQ0UsbUJBQW1CO0lBQ25CLGVBQWU7O0VBRWpCO0VBQ0E7SUFDRSxtQkFBbUI7SUFDbkIsZUFBZTtFQUNqQiIsInNvdXJjZXNDb250ZW50IjpbImJvZHl7XHJcbiAgICBiYWNrZ3JvdW5kOiAjRThENDI2ICFpbXBvcnRhbnQ7XHJcbiAgICBmb250LWZhbWlseTogJ011bGknLCBzYW5zLXNlcmlmO1xyXG4gICAgXHJcbiAgfVxyXG5cclxuICBoMXtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDJyZW07XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcbiAgYXtcclxuICAgIGNvbG9yOiAjMzMzO1xyXG4gIH1cclxuICBhOmhvdmVye1xyXG4gICAgY29sb3I6ICMyNWQxYzk7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgfVxyXG4gIC5mb3JtLWNvbnRyb2w6Zm9jdXN7XHJcbiAgXHJcbiAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgICBib3JkZXI6MnB4IHNvbGlkICNFOEQ0MjY7XHJcbiAgICAgIG91dGxpbmU6IDA7XHJcbiAgICAgIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgXHJcbiAgfVxyXG4gIFxyXG4gIC5idG57XHJcbiAgICBiYWNrZ3JvdW5kOiAjRThENDI2O1xyXG4gICAgYm9yZGVyOiAjRThENDI2O1xyXG4gICAgXHJcbiAgfVxyXG4gIC5idG46aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZDogI0U4RDQyNjtcclxuICAgIGJvcmRlcjogI0U4RDQyNjtcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAA+B,eAAe;AAC9E,SAASC,SAAS,EAAeC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,eAAe,QAAQ,MAAM;;;;;;;;AAUtC,OAAM,MAAOC,cAAc;EAczBC,YAAoBC,EAAe,EAAUC,MAAc,EAASC,WAAwB;IAAxE,OAAE,GAAFF,EAAE;IAAuB,WAAM,GAANC,MAAM;IAAiB,gBAAW,GAAXC,WAAW;IAZ/E,iBAAY,GAA0B,IAAIL,eAAe,CAAC,EAAE,CAAC;IAG7D,sBAAiB,GAAG,IAAIH,YAAY,EAAQ;IAG5C,kBAAa,GAAG,IAAIA,YAAY,EAAQ;IAExC,cAAS,GAAc,IAAIC,SAAS,CAAC,EAAE,CAAC;EAIwD;EAChG,IAAIQ,QAAQ;IAAK,OAAO,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,UAAU,CAAE;EAAE;EACzD,IAAIC,QAAQ;IAAK,OAAO,IAAI,CAACF,SAAS,CAACC,GAAG,CAAC,UAAU,CAAE;EAAE;EAE1DE,QAAQ;IACP,IAAI,CAACC,YAAY,CAACC,SAAS,CAACC,IAAI,IAAG;MACjC,IAAI,CAACN,SAAS,GAAG,IAAI,CAACJ,EAAE,CAACW,KAAK,CAAC;QAC7BR,QAAQ,EAAE,CAAEO,IAAI,CAACP,QAAQ,EAAE,CAACP,UAAU,CAACgB,QAAQ,CAAC,CAAE;QAClDN,QAAQ,EAAE,CAAEI,IAAI,CAACJ,QAAQ,EAAE,CAAEV,UAAU,CAACgB,QAAQ,CAAE;OACnD,CAAC;IACJ,CAAC,CAAC;IAEF,IAAI,CAACR,SAAS,CAACS,YAAY,CAACJ,SAAS,CAAEK,GAAG,IAAI;MAAG,IAAI,CAACC,iBAAiB,CAACC,IAAI,CAACF,GAAG,CAAC;IAAE,CAAC,CAAC;EACvF;EAEAG,UAAU;IACRC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACf,SAAS,CAACgB,KAAK,CAAC;IACjC;IACA,IAAI,CAACC,SAAS,CAAC,IAAI,CAACjB,SAAS,CAACgB,KAAK,CAAC;EACtC;EAEAC,SAAS,CAACX,IAAU;IAClB,IAAI,CAACR,WAAW,CAACoB,KAAK,CAACZ,IAAI,CAAC,CACzBD,SAAS,CAAC;MACTc,IAAI,EAAE,MAAK;QACT,IAAI,CAACtB,MAAM,CAACuB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;MACrC,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACfC,KAAK,CAAC,iBAAiB,CAAC;MAC1B;KACD,CAAC;EACN;;AA7Ca5B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA6B;EAAAC;IAAApB;EAAA;EAAAqB;IAAAd;IAAAe;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ3BC,8BAAkB;MAQ2DA;QAAA,OAAYC,gBAAY;MAAA,EAAC;MACpED,8BAAiC;MACPA,gCAAgB;MAAAA,iBAAQ;MAC9CA,2BAAuI;MAC3IA,iBAAM;MACNA,+BAAiC;MACqCA,0BAC9D;MAAAA,8BAAgE;MAAAA,wBAAO;MAAAA,iBAAI;MAC/EA,6BAA2H;MAC/HA,iBAAM;MACNA,gCAAkC;MAE1BA,6BAA4H;MAC5HA,kCAAsD;MAAAA,6BAAY;MAAAA,iBAAQ;MAGlFA,gCAA6B;MACgCA,uBAAM;MAAAA,iBAAS;MAGhFA,8BAAqC;MACRA,8BAAa;MAAAA,iBAAO;MAC7CA,8BAA+B;MAAAA,wBAAO;MAAAA,iBAAI;;;MAtBvBA,eAAuB;MAAvBA,yCAAuB;MAsBvCA,gBAA2B;MAA3BA,uDAA2B","names":["EventEmitter","FormGroup","Validators","BehaviorSubject","LoginComponent","constructor","fb","router","userService","username","loginForm","get","password","ngOnInit","initialState","subscribe","user","group","required","valueChanges","val","formValuesChanged","emit","submitForm","console","log","value","userLogin","login","next","navigate","error","alert","selectors","inputs","outputs","formSubmitted","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["F:\\Full stack devolopment 2\\mean-stack\\mean-stack-example\\client\\src\\app\\login\\login.component.ts","F:\\Full stack devolopment 2\\mean-stack\\mean-stack-example\\client\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { User } from '../user';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n  @Input()\n  initialState: BehaviorSubject<User> = new BehaviorSubject({});\n  \n  @Output()\n  formValuesChanged = new EventEmitter<User>();\n  \n  @Output()\n  formSubmitted = new EventEmitter<User>();\n  \n  loginForm: FormGroup = new FormGroup({});\n\n  \n\n  constructor(private fb: FormBuilder, private router: Router,private userService: UserService) { }\n  get username() { return this.loginForm.get('username')!; }\n  get password() { return this.loginForm.get('password')!; }\n   \n ngOnInit() {\n  this.initialState.subscribe(user => {\n    this.loginForm = this.fb.group({\n      username: [ user.username, [Validators.required] ],\n      password: [ user.password, [ Validators.required ] ]\n    });\n  });\n\n  this.loginForm.valueChanges.subscribe((val) => { this.formValuesChanged.emit(val); });\n}\n\nsubmitForm() {\n  console.log(this.loginForm.value);\n  //this.formSubmitted.emit(this.employeeForm.value);\n  this.userLogin(this.loginForm.value);\n}\n\nuserLogin(user: User) {\n  this.userService.login(user)\n    .subscribe({\n      next: () => {\n        this.router.navigate(['/home/new']);\n      },\n      error: (error) => {\n        alert(\"Failed to Login\");\n      }\n    });\n}\n}","<div class=\"pt-5\">\r\n    <!--<h1 class=\"text-center\">HTML Login Page with Bootstrap Example</h1>-->\r\n    \r\n  <div class=\"container login-bg\">\r\n                  <div class=\"row\">\r\n                      <div class=\"col-md-5 mx-auto\">\r\n                          <div class=\"card card-body\">\r\n                                                      \r\n                              <form id=\"submitForm\"  [formGroup]=\"loginForm\" (ngSubmit)=\"submitForm()\" >\r\n                                  <div class=\"form-group required\">\r\n                                      <label for=\"username\">Username / Email</label>\r\n                                      <input type=\"text\" class=\"form-control text-lowercase\" id=\"username\" required=\"\" formControlName=\"username\"  name=\"username\" value=\"\" >\r\n                                  </div>                    \r\n                                  <div class=\"form-group required\">\r\n                                      <label class=\"d-flex flex-row align-items-center\" for=\"password\" >Password \r\n                                          <a class=\"ml-auto border-link small-xl\" href=\"/forget-password\">Forget?</a></label>\r\n                                      <input type=\"password\" class=\"form-control\" required=\"\" formControlName=\"password\"  id=\"password\" name=\"password\" value=\"\">\r\n                                  </div>\r\n                                  <div class=\"form-group mt-4 mb-4\">\r\n                                      <div class=\"custom-control custom-checkbox\">\r\n                                          <input type=\"checkbox\" class=\"custom-control-input\" id=\"remember-me\" name=\"remember-me\" data-parsley-multiple=\"remember-me\">\r\n                                          <label class=\"custom-control-label\" for=\"remember-me\">Remember me?</label>\r\n                                      </div>\r\n                                  </div>\r\n                                  <div class=\"form-group pt-1\">\r\n                                      <button class=\"btn btn-primary btn-block\" type=\"submit\" >Log In</button>\r\n                                  </div>\r\n                              </form>\r\n                              <p class=\"small-xl pt-3 text-center\">\r\n                                  <span class=\"text-muted\">Not a member?</span>\r\n                                  <a [routerLink]=\"['register']\">Sign up</a>\r\n                              </p>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n   </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
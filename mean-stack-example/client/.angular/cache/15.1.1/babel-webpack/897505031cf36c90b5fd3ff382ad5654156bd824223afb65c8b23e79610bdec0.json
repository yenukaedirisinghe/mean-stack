{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../employee.service\";\nimport * as i3 from \"../employee-form/employee-form.component\";\nconst _c0 = [\"class\", \"component ts\"];\nexport class EditEmployeeComponent {\n  constructor(router, route, employeeService) {\n    this.router = router;\n    this.route = route;\n    this.employeeService = employeeService;\n    this.employee = new BehaviorSubject({});\n  }\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id');\n    if (!id) {\n      alert('No id provided');\n    }\n    this.employeeService.getEmployee(id).subscribe(employee => {\n      this.employee.next(employee);\n    });\n  }\n  editEmployee(employee) {\n    this.employeeService.updateEmployee(this.employee.value._id || '', employee).subscribe({\n      next: () => {\n        this.router.navigate(['/employees']);\n      },\n      error: error => {\n        alert('Failed to update employee');\n        console.error(error);\n      }\n    });\n  }\n}\nEditEmployeeComponent.ɵfac = function EditEmployeeComponent_Factory(t) {\n  return new (t || EditEmployeeComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.EmployeeService));\n};\nEditEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditEmployeeComponent,\n  selectors: [[\"app-edit-employee\", 8, \"component\", \"ts\"]],\n  attrs: _c0,\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"text-center\", \"m-5\"], [3, \"initialState\", \"formSubmitted\"]],\n  template: function EditEmployeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\", 0);\n      i0.ɵɵtext(1, \"Edit an Employee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"app-employee-form\", 1);\n      i0.ɵɵlistener(\"formSubmitted\", function EditEmployeeComponent_Template_app_employee_form_formSubmitted_2_listener($event) {\n        return ctx.editEmployee($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"initialState\", ctx.employee);\n    }\n  },\n  dependencies: [i3.EmployeeFormComponent],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAAQ,MAAM;;;;;;AAWtC,OAAM,MAAOC,qBAAqB;EAGjCC,YACUC,MAAc,EACdC,KAAqB,EACrBC,eAAgC;IAFhC,WAAM,GAANF,MAAM;IACN,UAAK,GAALC,KAAK;IACL,oBAAe,GAAfC,eAAe;IALzB,aAAQ,GAA8B,IAAIL,eAAe,CAAC,EAAE,CAAC;EAMzD;EAEJM,QAAQ;IACN,MAAMC,EAAE,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACjD,IAAI,CAACH,EAAE,EAAE;MACPI,KAAK,CAAC,gBAAgB,CAAC;;IAGzB,IAAI,CAACN,eAAe,CAACO,WAAW,CAACL,EAAI,CAAC,CAACM,SAAS,CAAEC,QAAQ,IAAI;MAC5D,IAAI,CAACA,QAAQ,CAACC,IAAI,CAACD,QAAQ,CAAC;IAC9B,CAAC,CAAC;EACJ;EAEAE,YAAY,CAACF,QAAkB;IAC7B,IAAI,CAACT,eAAe,CAACY,cAAc,CAAC,IAAI,CAACH,QAAQ,CAACI,KAAK,CAACC,GAAG,IAAI,EAAE,EAAEL,QAAQ,CAAC,CACzED,SAAS,CAAC;MACTE,IAAI,EAAE,MAAK;QACT,IAAI,CAACZ,MAAM,CAACiB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;MACtC,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACfV,KAAK,CAAC,2BAA2B,CAAC;QAClCW,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;KACD,CAAC;EACN;;AA/BYpB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MAJ/BC,6BAA4B;MAAAA,gCAAgB;MAAAA,iBAAK;MACjDA,4CAAoF;MAAvCA;QAAA,OAAiBC,wBAAoB;MAAA,EAAC;MAACD,iBAAoB;;;MAArFA,eAAyB;MAAzBA,2CAAyB","names":["BehaviorSubject","EditEmployeeComponent","constructor","router","route","employeeService","ngOnInit","id","snapshot","paramMap","get","alert","getEmployee","subscribe","employee","next","editEmployee","updateEmployee","value","_id","navigate","error","console","selectors","attrs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["F:\\Full stack devolpement\\mean-stack-example\\client\\src\\app\\edit-employee\\edit-employee.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { Employee } from '../employee';\nimport { EmployeeService } from '../employee.service';\n \n@Component({\n selector: 'app-edit-employee.component.ts',\n template: `\n   <h2 class=\"text-center m-5\">Edit an Employee</h2>\n   <app-employee-form [initialState]=\"employee\" (formSubmitted)=\"editEmployee($event)\"></app-employee-form>\n `\n})\nexport class EditEmployeeComponent implements OnInit {\n employee: BehaviorSubject<Employee> = new BehaviorSubject({});\n \n constructor(\n   private router: Router,\n   private route: ActivatedRoute,\n   private employeeService: EmployeeService,\n ) { }\n \n ngOnInit() {\n   const id = this.route.snapshot.paramMap.get('id');\n   if (!id) {\n     alert('No id provided');\n   }\n \n   this.employeeService.getEmployee(id !).subscribe((employee) => {\n     this.employee.next(employee);\n   });\n }\n \n editEmployee(employee: Employee) {\n   this.employeeService.updateEmployee(this.employee.value._id || '', employee)\n     .subscribe({\n       next: () => {\n         this.router.navigate(['/employees']);\n       },\n       error: (error) => {\n         alert('Failed to update employee');\n         console.error(error);\n       }\n     })\n }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MatchService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'http://localhost:5200';\n    this.matches$ = new Subject();\n  }\n  refreshMatches() {\n    this.httpClient.get(`${this.url}/matches`).subscribe(matches => {\n      this.matches$.next(matches);\n    });\n  }\n  getMatches() {\n    this.refreshMatches();\n    return this.matches$;\n  }\n}\nMatchService.ɵfac = function MatchService_Factory(t) {\n  return new (t || MatchService)(i0.ɵɵinject(i1.HttpClient));\n};\nMatchService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MatchService,\n  factory: MatchService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,OAAO,QAAa,MAAM;;;AAM/C,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAHtB,QAAG,GAAG,uBAAuB;IAC7B,aAAQ,GAAqB,IAAIH,OAAO,EAAE;EAEJ;EAEtCI,cAAc;IACpB,IAAI,CAACD,UAAU,CAACE,GAAG,CAAU,GAAG,IAAI,CAACC,GAAG,UAAU,CAAC,CAChDC,SAAS,CAACC,OAAO,IAAG;MACnB,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACF,OAAO,CAAC;IAC7B,CAAC,CAAC;EACN;EAEAG,UAAU;IACR,IAAI,CAACP,cAAc,EAAE;IACrB,OAAO,IAAI,CAACK,QAAQ;EACtB;;AAhBWR,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAW,SAAZX,YAAY;EAAAY,YAFX;AAAM","names":["Subject","MatchService","constructor","httpClient","refreshMatches","get","url","subscribe","matches","matches$","next","getMatches","factory","providedIn"],"sourceRoot":"","sources":["F:\\Full stack devolopment 2\\mean-stack\\mean-stack-example\\client\\src\\app\\match.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject, tap } from 'rxjs';\nimport { Match } from './match';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService {\n  private url = 'http://localhost:5200';\n  private matches$: Subject<Match[]> = new Subject();\n  \n  constructor(private httpClient: HttpClient) { }\n  \n  private refreshMatches() {\n    this.httpClient.get<Match[]>(`${this.url}/matches`)\n      .subscribe(matches => {\n        this.matches$.next(matches);\n      });\n  }\n  \n  getMatches(): Subject<Match[]> {\n    this.refreshMatches();\n    return this.matches$;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}